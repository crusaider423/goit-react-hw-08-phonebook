{"version":3,"file":"static/js/910.2e144666.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Forms/ContactForm/ContactForm.module.css?983c","components/Forms/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/contacts.module.css?1e09","components/Contacts/Contacts.jsx","page/ContactsPage.jsx"],"sourcesContent":["export const selectFilter = store => store.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter-selectors';\nexport const selectContacts = store => store.contacts;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const { items } = contacts;\n    if (!filter) {\n      return items;\n    }\n    const normalizedFilter = filter.toLowerCase().trim();\n    return items.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n      );\n    });\n  }\n);\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"wraper\":\"ContactForm_wraper__kGvHg\",\"form\":\"ContactForm_form__ZCbN2\",\"btn\":\"ContactForm_btn__LB+M3\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const nameId = nanoid();\n  const telId = nanoid();\n\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : name === 'number' && setPhone(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setPhone('');\n  };\n  return (\n    <div className={css.wraper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameId}> Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          id={nameId}\n          placeholder=\"name\"\n          onChange={handleChange}\n          pattern={\n            \"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          }\n        />\n        <label htmlFor={telId}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          required\n          id={telId}\n          placeholder=\"phone number\"\n          onChange={handleChange}\n          pattern={\n            '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}'\n          }\n        />\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\"};","import css from './ContactList.module.css';\n\nexport const ContactList = ({ contacts, deleteContact }) => {\n  const elem = contacts.map(\n    ({ id, name, number }) =>\n      (name || number) && (\n        <li key={id}>\n          {name}: {number}\n          <button\n            className={css.btn}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            delete\n          </button>\n        </li>\n      )\n  );\n  return <ol> {elem}</ol>;\n};\n","export const Filter = ({ changeFilter, title, filter }) => {\n  return (\n    <div>\n      <p>{title}</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Search\"\n        onChange={changeFilter}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wraper\":\"contacts_wraper__C4FUQ\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/filter/filter-slice';\nimport {\n  fetchContacts,\n  deleteContact,\n  addContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { selectFilter } from '../../redux/filter/filter-selectors';\nimport { ContactForm, Filter, ContactList } from '../index';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const { isLoading, error } = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onChangeFilter = ({ target: { value } }) =>\n    dispatch(filterContact(value));\n  const onDeleteContact = itemId => dispatch(deleteContact(itemId));\n  const onAddContact = stateForm => dispatch(addContact(stateForm));\n\n  return (\n    <main>\n      <div className={css.wraper}>\n       <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={onAddContact} />\n       </div>\n        <div>\n          <h2>Contacts</h2>\n          <Filter\n            title={'Find contacts by name'}\n            filter={filter}\n            changeFilter={onChangeFilter}\n          />\n          {isLoading && <p>....Loading</p>}\n          {error && <p>{error}</p>}\n          <ContactList contacts={contacts} deleteContact={onDeleteContact} />\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Contacts;\n","import Contacts from '../components/Contacts/Contacts';\n\nconst ContactsPage = () => {\n  return <Contacts />;\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","store","filter","selectContacts","contacts","selectFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","trim","_ref","name","number","includes","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","onSubmit","nameId","telId","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setPhone","handleChange","_ref2","_ref2$target","target","value","_jsx","className","css","children","_jsxs","e","preventDefault","htmlFor","type","required","placeholder","onChange","pattern","ContactList","deleteContact","elem","map","onClick","Filter","changeFilter","title","_useSelector","useSelector","isLoading","error","dispatch","useDispatch","useEffect","fetchContacts","stateForm","addContact","filterContact","itemId","Contacts"],"sourceRoot":""}