{"version":3,"file":"static/js/870.011ebf01.chunk.js","mappings":"gOACA,EAAwB,0BAAxB,EAAyD,yBAAzD,EAA8F,8BAA9F,EAAkI,wBAAlI,EAAkK,0BAAlK,EAAoM,0B,SCwDpM,EAtDkB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAc,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACbC,EAAgBD,EAAhBC,MACC,UADeD,EAATE,KACIT,EAASQ,GAASJ,EAAYI,EACnD,EAQME,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SACnB,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,UACxBC,EAAAA,EAAAA,MAAA,QAAMvB,SAZS,SAAAwB,GACnBA,EAAEC,iBACFzB,EAAS,CAAEK,MAAAA,EAAOI,SAAAA,IAClBH,EAAS,IACTI,EAAY,GACd,EAOoCU,UAAWC,EAASC,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SAAOO,QAASV,EAASI,UAAWC,EAAUC,SAAC,UAG/CH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXM,KAAK,QACLC,GAAIZ,EACJD,KAAK,QACLc,SAAUlB,EACVG,MAAOT,EACPyB,YAAY,OACZC,UAAQ,KAEVZ,EAAAA,EAAAA,KAAA,SAAOO,QAASR,EAAYE,UAAWC,EAAUC,SAAC,cAGlDH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXM,KAAK,WACLC,GAAIV,EACJH,KAAK,WACLc,SAAUlB,EACVG,MAAOL,EACPqB,YAAY,WACZC,UAAQ,KAEVZ,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASP,UAAWC,EAAQC,SAAC,gBAKpD,EC7CA,EANkB,WAChB,IAAMU,GAAUC,EAAAA,EAAAA,MAEhB,OAAOd,EAAAA,EAAAA,KAACe,EAAS,CAAClC,SADJ,SAAAmC,GAAG,OAAIH,GAAQI,EAAAA,EAAAA,IAAUD,GAAM,GAE/C,C","sources":["webpack://react-homework-template/./src/components/Forms/LoginForm/login-form.module.css?7410","components/Forms/LoginForm/LoginForm.jsx","page/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cover\":\"login-form_cover__gEIz0\",\"form\":\"login-form_form__NUpkj\",\"container\":\"login-form_container__yiqBZ\",\"btn\":\"login-form_btn__g9KGo\",\"lable\":\"login-form_lable__oT1Sf\",\"input\":\"login-form_input__3Amfs\"};","import { useId, useState } from 'react';\nimport css from './login-form.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInput = ({ target }) => {\n    const { value, name } = target;\n    name === 'email' ? setEmail(value) : setPassword(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ email, password });\n    setEmail('');\n    setPassword('');\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n  return (\n    <div className={css.container}>\n      <div className={css.cover}>\n        <form onSubmit={handleSubmit} className={css.form}>\n          <label htmlFor={emailId} className={css.lable}>\n            name\n          </label>\n          <input\n            className={css.input}\n            type=\"email\"\n            id={emailId}\n            name=\"email\"\n            onChange={handleInput}\n            value={email}\n            placeholder='name'\n            required\n          />\n          <label htmlFor={passwordId} className={css.lable}>\n            password\n          </label>\n          <input\n            className={css.input}\n            type=\"password\"\n            id={passwordId}\n            name=\"password\"\n            onChange={handleInput}\n            value={password}\n            placeholder='password'\n            required\n          />\n          <button type=\"submit\" className={css.btn}>Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\nimport { loginUser } from '../redux/auth/auth-operations';\nimport LoginForm from 'components/Forms/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const dispath = useDispatch();\n  const login = obj => dispath(loginUser(obj));\n  return <LoginForm onSubmit={login} />;\n};\n\nexport default LoginPage;\n"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleInput","_ref2","target","value","name","emailId","useId","passwordId","_jsx","className","css","children","_jsxs","e","preventDefault","htmlFor","type","id","onChange","placeholder","required","dispath","useDispatch","LoginForm","obj","loginUser"],"sourceRoot":""}